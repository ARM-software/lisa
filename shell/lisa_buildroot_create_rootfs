#! /bin/bash
#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright (C) 2018, ARM Limited and contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
set -eu

BUILDROOT_URI=git://git.busybox.net/buildroot
BUILDROOT_VERSION=2018.08
BUILDROOT_DIR=$LISA_HOME/src/buildroot
BUILDROOT_CONFIG=$(dirname "$0")/buildroot_config

function print_usage {
	echo "Usage: $0 [options]"
	echo "	options:"
	echo "		-p: purge buildroot to force a fresh build"
	echo "		-h: print this help message"
}

while getopts "hp" opt
do
	case $opt in
		h)
			print_usage
			exit 0
			;;
		p)
			rm -rf "$BUILDROOT_DIR"
			exit 0
			;;
		*)
			print_usage
			exit -1
			;;
	esac
done

# Execute function @$1 once
function do_once {
	FILE="$BUILDROOT_DIR/.lisa_$1"
	if [ ! -e "$FILE" ]; then
		"$1"
		touch "$FILE"
	fi
}

function br_clone {
	git clone $BUILDROOT_URI "$BUILDROOT_DIR"
}

function br_checkout_version {
	pushd "$BUILDROOT_DIR" >/dev/null
	git checkout -b $BUILDROOT_VERSION $BUILDROOT_VERSION
	popd >/dev/null
}

function br_pre_patch {
	pushd "$BUILDROOT_DIR" >/dev/null

	# Apply 'before build' changes here

	# Automount debugfs
	echo "debugfs	/sys/kernel/debug	debugfs	defaults	0	0" >> "$BUILDROOT_DIR/package/skeleton-init-sysv/skeleton/etc/fstab"

	popd >/dev/null
}

function br_post_patch {
	pushd "$BUILDROOT_DIR" >/dev/null

	# Apply 'post build' changes here

	# Generate ssh-keys so that they persist across multiple runs
	ssh-keygen -A -f "$BUILDROOT_DIR/output/target/"
	# Enable root login on sshd
	sed -i 's/#PermitRootLogin.*/PermitRootLogin	yes/' "$BUILDROOT_DIR/output/target/etc/ssh/sshd_config"
	# run udhcpc by default at startup
	echo "null::once:/sbin/udhcpc # PATCHED BY LISA" >> "$BUILDROOT_DIR/output/target/etc/inittab"

	popd >/dev/null

	# Rebuild to apply the changes
	make -C "$BUILDROOT_DIR"
}

function br_apply_config {
	cp "$BUILDROOT_CONFIG" "$BUILDROOT_DIR/.config"
	make -C "$BUILDROOT_DIR" olddefconfig
}


do_once br_clone

do_once br_checkout_version

do_once br_pre_patch

do_once br_apply_config

make -C "$BUILDROOT_DIR"

do_once br_post_patch

echo "---===::: RootFS Created :::===---"
echo "Path: $BUILDROOT_DIR/output/images/rootfs.cpio.xz"
