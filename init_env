#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright (C) 2015, ARM Limited and contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# LISA Shell: Initialization

# Running under BASH
if grep "bash" /proc/$$/cmdline &>/dev/null; then
	# Get base installation path of LISA
	export LISA_HOME=$(readlink -f "$(dirname "$BASH_SOURCE")")

	source "$(dirname "$BASH_SOURCE")/shell/lisa_shell"

	PS1="\[${LISASHELL_BLUE}\][LISAShell \[${LISASHELL_LCYAN}\]\W\[${LISASHELL_BLUE}\]] \> \[${LISASHELL_RESET}\]"
	# Make sure that bash picks up new location for all binaries
	hash -r 

# Running under ZSH
elif grep "zsh" /proc/$$/cmdline &>/dev/null; then
	# Get base installation path of LISA
	export LISA_HOME=${${${(%):-%N}:h}:A}

	# Source the script in "sh" emulation mode. This will also mark the
	# functions declared there to be executed in emulated mode, so they will
	# work as well
	emulate sh -c "source "$LISA_HOME/shell/lisa_shell""
	# Make sure that zsh picks up new location for all binaries
	hash -r

else
	echo "WARNING: Current shell is not a BASH"
	# Check if a bash shell is available
	if which bash &>/dev/null; then
		# Switch to a BASH shell
		exec bash --init-file ./init_env
	else
		echo "ERROR: A BASH shell is not available in PATH"
	fi
	# It's up to the user to install a BASH
	echo "The LISA shell requires a BASH shell."
	echo "Please, source this configuration from a terminal running BASH."
fi

# vim :set tabstop=4 shiftwidth=4 textwidth=80 expandtab
