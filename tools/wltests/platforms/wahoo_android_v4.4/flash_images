#!/bin/bash

SCRIPT_DIR=$(dirname $(realpath -s $0))
BASE_DIR="$SCRIPT_DIR/../.."
source "${BASE_DIR}/helpers"
source "${PLATFORM_PATH}/definitions"

MODE=${1:-FASTBOOT}

################################################################################
# Flash all images required to test a new kernel
################################################################################

# Check for DTBO image
ls "${ARTIFACTS_PATH}/${ANDROID_DTBO_IMAGE}" &>/dev/null; ERROR=$?
if [ $ERROR -ne 0 ]; then
	c_error "No DTBO image to flash found in $PWD"
	exit $ENOENT
fi

# Check for KERNEL image
ls "${ARTIFACTS_PATH}/${KERNEL_IMAGE}" &>/dev/null; ERROR=$?
if [ $ERROR -ne 0 ]; then
	c_error "No KERNEL image to flash found in $PWD"
	exit $ENOENT
fi

# Check for modules to be pushed
MODULE_DIR="${ARTIFACTS_PATH}/push_files/vendor/lib/modules"
ls ${MODULE_DIR}/*.ko &>/dev/null; ERROR=$?
if [ $ERROR -ne 0 ]; then
	c_error "No MODULES to push found in $MODULE_DIR"
	exit $ENOENT
fi

case "$MODE" in

ADB)
	echo
	c_info "Restart ADB in root mode..."
	$ADB root &>/dev/null

	# Verity must be disabled one time, right after the first boot, once a
	# new set of stock images has been flashed on the device.
	# This check is just there to ensure we can remount root rw, otherwise
	# wltests will abort and the device must be rebooted by hand.
	c_info "Checking that verity is disabled..."
	OUTPUT="$($ADB disable-verity)"
	echo
	echo "$OUTPUT"
	echo
	if [[ $OUTPUT != *"verity is already disabled"* ]]; then
		c_error   "Verity not disabled on this device!"
		c_warning "It has been disabled now but you have to"
		c_warning "manually reboot your device and restart wltests"
		echo
		echo
		exit $EIO
	fi

	c_info "Remounting / rw..."
	$ADB remount &>/dev/null; ERROR=$?
	if [[ $ERROR -ne 0 ]]; then
		c_error "Remount failed"
		exit $EIO
	fi
	sleep 10

	c_info "Pushing kernel modules..."
	$ADB shell rm -rf /vendor/lib/modules
	$ADB push ${ARTIFACTS_PATH}/push_files/* /
	sleep 5

	exit $OK
	;;

FASTBOOT)
	echo
	c_info "Flashing [$KERNEL_IMAGE] on KERNEL partition..."
	$FASTBOOT flash kernel ${ARTIFACTS_PATH}/${KERNEL_IMAGE}
	ERROR=$?
	[ $ERROR -eq 0 ] || exit -$ERROR

	echo
	c_info "Flashing [$ANDROID_DTBO_IMAGE] on DTBO partition..."
	$FASTBOOT flash dtbo ${ARTIFACTS_PATH}/${ANDROID_DTBO_IMAGE}
	ERROR=$?
	[ $ERROR -eq 0 ] || exit -$ERROR

	exit $OK
	;;

esac

exit -$EINVAL

