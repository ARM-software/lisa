.\" Man page generated from reStructuredText.
.
.TH "LISA" "1" "2019" "" "LISA shell"
.SH NAME
lisa \- LISA shell commands
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Once you have all of the required dependencies installed, you can use the LISA
shell, which provides a convenient set of commands for easy access to many LISA
related functions, scripts and environment variables.
.sp
For more details, see
\fI\%https://lisa\-linux\-integrated\-system\-analysis.readthedocs.io/en/master/\fP
.SH ACTIVATION
.sp
In order to use the shell, source the script:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
source init_env
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This is done automatically by vagrant, so you don\(aqt have to issue this
command after doing a \fBvagrant ssh\fP
.UNINDENT
.UNINDENT
.sp
\fBTIP:\fP
.INDENT 0.0
.INDENT 3.5
Run \fBman lisa\fP to see an overview of the provided LISA commands.
.UNINDENT
.UNINDENT
.SH COMMANDS
.sp
Most LISA Shell commands start with \fBlisa\-\fP, thus using shell completion it
is easy to get a list of all the available commands.
.sp
Here is the documentation of the simple ones, more complex scripts have
integrated \fB\-\-help\fP documentation, a section in the online documentation, or
man pages.
.SS Maintenance commands
.INDENT 0.0
.IP \(bu 2
\fBlisa\-help\fP             \- Show this help
.IP \(bu 2
\fBlisa\-install\fP          \- Remove the previous venv and do a fresh ven install
.IP \(bu 2
\fBlisa\-version\fP          \- Dump info on the LISA in use
.IP \(bu 2
\fBlisa\-activate\-venv\fP    \- Activate the LISA venv, and create it if it does not exist
.IP \(bu 2
\fBlisa\-deactivate\-venv\fP  \- Deactivate the LISA venv, and create it if it does not exist
.IP \(bu 2
\fBlisa\-update\-subtrees\fP  \- Update the subtrees by pulling their latest changes
.IP \(bu 2
\fBlisa\-log\-subtree\fP      \- Git log on the squashed commits of the given
subtree. All other options are passed to \fIgit log\fP\&.
.IP \(bu 2
\fBlisa\-doc\-build\fP        \- Build the documentation
.IP \(bu 2
\fBlisa\-build\-asset\fP      \- Download and cross\-compile the binary assets in \fIlisa/assets/binaries\fP
.UNINDENT
.SS Notebooks commands
.INDENT 0.0
.IP \(bu 2
\fBlisa\-jupyter\fP \- Start/Stop the Jupyter Notebook server.
.INDENT 2.0
.INDENT 3.5
Usage: \fBlisa\-jupyter CMD [NETIF [PORT]]\fP
.TS
center;
|l|l|.
_
T{
\fICMD\fP
T}	T{
\fIstart\fP to start the jupyter notebook server, \fIstop\fP to stop it
(default: \fIstart\fP)
T}
_
T{
\fINETIF\fP
T}	T{
the network interface to start the server on (default: \fIlo\fP)
T}
_
T{
\fIPORT\fP
T}	T{
the tcp port for the server (default: 8888)
T}
_
.TE
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBlisa\-execute\-notebook\fP \- Execute the given notebook as a script.
.UNINDENT
.SS Test commands
.INDENT 0.0
.IP \(bu 2
\fBlisa\-test\fP \- Run LISA synthetic tests.
.INDENT 2.0
.INDENT 3.5
This is just a wrapper around \fBexekall\fP that selects all tests modules and
use positional arguments as \fB\-\-select\fP patterns. The default configuration
file (\fB$LISA_CONF\fP) will be used if available. This can be extended with
user\-supplied \fB\-\-conf\fP\&. If multiple iterations are requested using \fB\-n\fP,
the \fBlisa.target.Target\fP instance will be reused across iterations,
to avoid the overhead of setting up the target environment.
.sp
Usage: \fBlisa\-test TEST_PATTERN ... [EXEKALL_OPTIONS ...]\fP
.sp
Example: \fBlisa\-test \(aqOneSmallTask*\(aq \-\-list\fP
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBlisa\-wltest\-series\fP    \- See wltest main documentation
.IP \(bu 2
\fBexekall\fP               \- See exekall main documentation
.IP \(bu 2
\fBbisector\fP              \- See bisector main documentation
.UNINDENT
.SS Buildroot commands
.INDENT 0.0
.IP \(bu 2
\fBlisa\-buildroot\-create\-rootfs\fP\- Create a buildroot based rootfs to be used
as userland for testing
.IP \(bu 2
\fBlisa\-buildroot\-update\-kernel\-config\fP \- Update a kernel config to bake a
buildroot initramfs into the kernel.
.UNINDENT
.SS Misc commands
.INDENT 0.0
.IP \(bu 2
\fBlisa\-plot\fP \- Generate various plots from a \fBtrace.dat\fP file.
See \fBlisa\-plot \-h\fP for available plots.
.IP \(bu 2
\fBlisa\-platinfo\-extract\fP \- Extract a platform information file
(\fBlisa.platforms.platinfo.PlatformInfo\fP) from the target, containing
all the knowledge of the target tests or plot functions need.
.IP \(bu 2
\fBlisa\-conf\-cat\fP \- Parse a LISA YAML configuration file and pretty print it
on it\(aqs standard output with help for each key and values of tags computed and
interpolated.
.UNINDENT
.SH ENVIRONMENT VARIABLES
.sp
The following environment variables are available:
.TS
center;
|l|l|l|.
_
T{
EXEKALL_ARTIFACT_ROOT
T}	T{
Default root for exekall\(aqs artifacts
T}	T{
results
T}
_
T{
LISA_CONF
T}	T{
Default configuration file for exekall
T}	T{
target_conf.yml
T}
_
T{
LISA_DEVMODE
T}	T{
By default use internal libraries
T}	T{
1
T}
_
T{
LISA_HOME
T}	T{
Base directory of LISA environment
T}	T{
\&.
T}
_
T{
LISA_HOST_ABI
T}	T{
Add some shell utilities to the PATH, based on the host ABI. Priority
is determined by LISA_USE_SYSTEM_BIN
T}	T{
x86_64
T}
_
T{
LISA_PRESERVE_SHELL
T}	T{
By default use Lisa\(aqs PS1 and colorscheme for the shell
T}	T{
0
T}
_
T{
LISA_PYTHON
T}	T{
Python binary to use. This allows users to install multiple versions
in parallel, and ease testing
T}	T{
python3
T}
_
T{
LISA_RESULT_ROOT
T}	T{
By default, store the results under that folder
T}	T{
results
T}
_
T{
LISA_USE_SYSTEM_BIN
T}	T{
Use the system binaries if 1, will use the ones shipped with LISA if 0
T}	T{
0
T}
_
T{
LISA_USE_VENV
T}	T{
1 to make lisa\-install use a venv specified in LISA_VENV_PATH, 0
otherwise
T}	T{
1
T}
_
T{
LISA_VENV_PATH
T}	T{
Path to venv to be used by lisa\-install
T}	T{
\&.lisa\-venv\-<python version>
T}
_
.TE
.sp
If an environment variable is defined prior to sourcing \fBinit_env\fP, it will
keep its value.
.SH AUTHOR
ARM-Software
.SH COPYRIGHT
2019, ARM-Software
.\" Generated by docutils manpage writer.
.
